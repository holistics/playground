use demo

Dashboard multi_value_gauge {
  title: 'Multiple-Value Gauge Chart'
  description: ''''''

  view: CanvasLayout {
    label: 'View 1'
    width: 1280
    height: 840
    grid_size: 20
    block t1 {
      position: pos(20, 20, 320, 800)
    }
    block t2 {
      position: pos(360, 460, 440, 360)
    }
    block t3 {
      position: pos(820, 460, 440, 360)
    }
    block v1 {
      position: pos(360, 20, 900, 120)
    }
    block v3 {
      position: pos(360, 160, 440, 280)
    }
  }
  theme: H.themes.classic
  block t1: TextBlock {
    content: @md # Multi-Value Gauge Chart
---
A Multi-Value Gauge Chart effectively visualizes multiple measures in relation to a target value within a single gauge.

Key Inputs:
* **Green Measure**
* **Orange Measure**
* **Red Measure**
* â€‹**Target Measure:** Sets a goal or benchmark for comparison.
* **Max Value Measure:** Sets the upper limit of the gauge's scale.

Customizations: You have the following options for further customizations:
* Colors of measures
* Font size of labels ;;
  }
  block t2: TextBlock {
    content: @md ğŸ‘‡ Use the template below to create this chart using [Custom Charts](https://docs.holistics.io/docs/charts/custom-charts).

```
CustomChart {
  fields {
    field m1 {
      type: "measure"
      label: "Value 1"
    }
    field m2 {
      type: "measure"
      label: "Value 2"
    }
    field target {
      type: "measure"
      label: "Target"
    }
    field max {
      type: "measure"
      label: "Max Value"
    }
  }

  options {
    option max_color {
      type: "color-picker"
      label: "Max Color"
      default_value: "lightgray"
    }
    option m1_color {
      type: "color-picker"
      label: "Value 1 Color"
      default_value: "green"
    }
    option m2_color {
      type: "color-picker"
      label: "Value 2 Color"
      default_value: "red"
    }
    option target_color {
      type: "color-picker"
      label: "Target Color"
      default_value: "black"
    }
    option label_font_size {
      type: "number-input"
      label: "Label Font Size"
      default_value: 12
    }
    option percentage_font_size {
      type: "number-input"
      label: "Percentage Font Size"
      default_value: 36
    }
  }

  template: @vgl {
    "data": {
      "values": @{values}
    },
    "transform": [
      {"calculate": "datum['@{fields.m1.name}']", "as": "m1"},
      {"calculate": "datum['@{fields.m2.name}']", "as": "m2"},
      {"calculate": "datum['@{fields.target.name}']", "as": "target"},
      {"calculate": "datum['@{fields.max.name}']", "as": "max"},
      
      {"calculate": "datum.m1 / datum.max", "as": "m1_percentage"},
      {"calculate": "datum.m2 / datum.max", "as": "m2_percentage"},
      {"calculate": "datum.target / datum.max", "as": "target_percentage"},

      {"calculate": "360 - (180 / 2)", "as": "_arc_start_degrees"},
      {"calculate": "0 + (180 / 2)", "as": "_arc_end_degrees"},

      {"calculate": "2 * PI * (datum['_arc_start_degrees'] - 360) / 360", "as": "_arc_start_radians"},
      {"calculate": "2 * PI * datum['_arc_end_degrees'] / 360", "as": "_arc_end_radians"},
      {"calculate": "datum['_arc_end_radians'] - datum['_arc_start_radians']", "as": "_arc_total_radians"},
      {"calculate": "datum['_arc_start_radians']", "as": "_ring_start_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.m1_percentage)", "as": "m1_ring_end_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.m2_percentage)", "as": "m2_ring_end_radians"},

      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.target_percentage)", "as": "target_ring_start_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.target_percentage) + (1 * (PI/180))", "as": "target_ring_end_radians"}
    ],
    "params": [
      {"name": "ring_max", "value": 160},
      {"name": "ring_width", "value": 30},
      {"name": "ring_gap", "value": 30},
      {"name": "ring0_percent", "value": 100},
      {"name": "ring0_outer", "expr": "ring_max+2"},
      {"name": "ring0_inner", "expr": "ring_max+1"},
      {"name": "ring1_outer", "expr": "ring0_inner-ring_gap"},
      {"name": "ring1_inner", "expr": "ring1_outer-ring_width"},
      {"name": "ring1_middle", "expr": "(ring1_outer+ring1_inner)/2"},
      {"name": "ring_yOffset", "expr": "ring_max-ring_width-ring_gap-20"},
      {"name": "ring_label", "expr": "ring1_outer + 10"},
      {"name": "max_color", "value": @{options.max_color.value}},
      {"name": "m1_color", "value": @{options.m1_color.value}},
      {"name": "m2_color", "value": @{options.m2_color.value}},
      {"name": "target_color", "value": @{options.target_color.value}},
      {"name": "label_font_size", "value": @{options.label_font_size.value}},
      {"name": "percentage_font_size", "value": @{options.percentage_font_size.value}}
    ],
    "encoding": {
      "tooltip": [
        {"field": @{fields.m1.name}, "format": @{fields.m1.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.m2.name}, "format": @{fields.m2.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.target.name}, "format": @{fields.target.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.max.name}, "format": @{fields.max.format}, "formatType": "holisticsFormat"}
      ]
    },
    "layer": [
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._arc_start_radians"},
          "theta2": {"expr": "datum._arc_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "max_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._ring_start_radians"},
          "theta2": {"expr": "datum.m2_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "m2_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._ring_start_radians"},
          "theta2": {"expr": "datum.m1_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "m1_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer+3"},
          "radius2": {"expr": "ring1_inner-3"},
          "theta": {"expr": "datum.target_ring_start_radians"},
          "theta2": {"expr": "datum.target_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "target_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "fontSize": {"expr": "percentage_font_size"},
          "font": "Inter",
          "fontWeight": 700,
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-35"}
        },
        "encoding": {
          "text": {
            "field": "m1_percentage",
            "type": "quantitative",
            "format": ".2%"
          },
          "color": {"value": {"expr": "m1_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.m1_ring_end_radians"},
          "align": {"expr": "datum.m1_ring_end_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.m1_ring_end_radians > -PI/2 && datum.m1_ring_end_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.m1 == datum.max || datum.m1 == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "m1", "type": "quantitative", "format": @{fields.m1.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "m1_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.m2_ring_end_radians"},
          "align": {"expr": "datum.m2_ring_end_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.m2_ring_end_radians > -PI/2 && datum.m2_ring_end_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.m2 == datum.max || datum.m2 == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "m2", "type": "quantitative", "format": @{fields.m2.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "m2_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.target_ring_start_radians"},
          "align": {"expr": "datum.target_ring_start_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.target_ring_start_radians > -PI/2 && datum.target_ring_start_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.target == datum.max || datum.target == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "target", "type": "quantitative", "format": @{fields.target.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "target_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum._arc_start_radians"},
          "align": "right",
          "baseline": "middle",
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"value": "0"},
          "color": {"value": "black"}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum._arc_end_radians"},
          "align": "left",
          "baseline": "middle",
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "max", "type": "quantitative", "format": @{fields.max.format}, "formatType": "holisticsFormat"},
          "color": {"value": "black"}
        }
      }
    ]
  }\;\;
}
```;;
  }
  block t3: TextBlock {
    content: @md ğŸ‘‡ Use the template below to create this chart using [Custom Charts](https://docs.holistics.io/docs/charts/custom-charts).

```
CustomChart {
  fields {
    field m1 {
      type: "measure"
      label: "Value 1"
    }
    field m2 {
      type: "measure"
      label: "Value 2"
    }
    field m3 {
      type: "measure"
      label: "Value 3"
    }
    field target {
      type: "measure"
      label: "Target"
    }
    field max {
      type: "measure"
      label: "Max Value"
    }
  }

  options {
    option max_color {
      type: "color-picker"
      label: "Max Color"
      default_value: "lightgray"
    }
    option m1_color {
      type: "color-picker"
      label: "Value 1 Color"
      default_value: "green"
    }
    option m2_color {
      type: "color-picker"
      label: "Value 2 Color"
      default_value: "orange"
    }
    option m3_color {
      type: "color-picker"
      label: "Value 3 Color"
      default_value: "red"
    }
    option target_color {
      type: "color-picker"
      label: "Target Color"
      default_value: "black"
    }
    option label_font_size {
      type: "number-input"
      label: "Label Font Size"
      default_value: 12
    }
    option percentage_font_size {
      type: "number-input"
      label: "Percentage Font Size"
      default_value: 36
    }
  }

  template: @vgl {
    "data": {
      "values": @{values}
    },
    "transform": [
      {"calculate": "datum['@{fields.m1.name}']", "as": "m1"},
      {"calculate": "datum['@{fields.m2.name}']", "as": "m2"},
      {"calculate": "datum['@{fields.m3.name}']", "as": "m3"},
      {"calculate": "datum['@{fields.target.name}']", "as": "target"},
      {"calculate": "datum['@{fields.max.name}']", "as": "max"},
      
      {"calculate": "datum.m1 / datum.max", "as": "m1_percentage"},
      {"calculate": "datum.m2 / datum.max", "as": "m2_percentage"},
      {"calculate": "datum.m3 / datum.max", "as": "m3_percentage"},
      {"calculate": "datum.target / datum.max", "as": "target_percentage"},

      {"calculate": "360 - (180 / 2)", "as": "_arc_start_degrees"},
      {"calculate": "0 + (180 / 2)", "as": "_arc_end_degrees"},

      {"calculate": "2 * PI * (datum['_arc_start_degrees'] - 360) / 360", "as": "_arc_start_radians"},
      {"calculate": "2 * PI * datum['_arc_end_degrees'] / 360", "as": "_arc_end_radians"},
      {"calculate": "datum['_arc_end_radians'] - datum['_arc_start_radians']", "as": "_arc_total_radians"},
      {"calculate": "datum['_arc_start_radians']", "as": "_ring_start_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.m1_percentage)", "as": "m1_ring_end_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.m2_percentage)", "as": "m2_ring_end_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.m3_percentage)", "as": "m3_ring_end_radians"},

      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.target_percentage)", "as": "target_ring_start_radians"},
      {"calculate": "datum['_arc_start_radians'] + (datum['_arc_total_radians'] * datum.target_percentage) + (1 * (PI/180))", "as": "target_ring_end_radians"}
    ],
    "params": [
      {"name": "ring_max", "value": 160},
      {"name": "ring_width", "value": 30},
      {"name": "ring_gap", "value": 30},
      {"name": "ring0_percent", "value": 100},
      {"name": "ring0_outer", "expr": "ring_max+2"},
      {"name": "ring0_inner", "expr": "ring_max+1"},
      {"name": "ring1_outer", "expr": "ring0_inner-ring_gap"},
      {"name": "ring1_inner", "expr": "ring1_outer-ring_width"},
      {"name": "ring1_middle", "expr": "(ring1_outer+ring1_inner)/2"},
      {"name": "ring_yOffset", "expr": "ring_max-ring_width-ring_gap-20"},
      {"name": "ring_label", "expr": "ring1_outer + 10"},
      {"name": "max_color", "value": @{options.max_color.value}},
      {"name": "m1_color", "value": @{options.m1_color.value}},
      {"name": "m2_color", "value": @{options.m2_color.value}},
      {"name": "m3_color", "value": @{options.m3_color.value}},
      {"name": "target_color", "value": @{options.target_color.value}},
      {"name": "label_font_size", "value": @{options.label_font_size.value}},
      {"name": "percentage_font_size", "value": @{options.percentage_font_size.value}}
    ],
    "encoding": {
      "tooltip": [
        {"field": @{fields.m1.name}, "format": @{fields.m1.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.m2.name}, "format": @{fields.m2.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.m3.name}, "format": @{fields.m3.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.target.name}, "format": @{fields.target.format}, "formatType": "holisticsFormat"},
        {"field": @{fields.max.name}, "format": @{fields.max.format}, "formatType": "holisticsFormat"}
      ]
    },
    "layer": [
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._arc_start_radians"},
          "theta2": {"expr": "datum._arc_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "max_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._ring_start_radians"},
          "theta2": {"expr": "datum.m3_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "m3_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._ring_start_radians"},
          "theta2": {"expr": "datum.m2_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "m2_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer"},
          "radius2": {"expr": "ring1_inner"},
          "theta": {"expr": "datum._ring_start_radians"},
          "theta2": {"expr": "datum.m1_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "m1_color"}}
        }
      },
      {
        "mark": {
          "type": "arc",
          "radius": {"expr": "ring1_outer+3"},
          "radius2": {"expr": "ring1_inner-3"},
          "theta": {"expr": "datum.target_ring_start_radians"},
          "theta2": {"expr": "datum.target_ring_end_radians"},
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "color": {"value": {"expr": "target_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "fontSize": {"expr": "percentage_font_size"},
          "font": "Inter",
          "fontWeight": 700,
          "yOffset": {"expr": "ring_max-ring_width-ring_gap-35"}
        },
        "encoding": {
          "text": {
            "field": "m1_percentage",
            "type": "quantitative",
            "format": ".2%"
          },
          "color": {"value": {"expr": "m1_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.m1_ring_end_radians"},
          "align": {"expr": "datum.m1_ring_end_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.m1_ring_end_radians > -PI/2 && datum.m1_ring_end_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.m1 == datum.max || datum.m1 == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "m1", "type": "quantitative", "format": @{fields.m1.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "m1_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.m2_ring_end_radians"},
          "align": {"expr": "datum.m2_ring_end_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.m2_ring_end_radians > -PI/2 && datum.m2_ring_end_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.m2 == datum.max || datum.m2 == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "m2", "type": "quantitative", "format": @{fields.m2.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "m2_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.m3_ring_end_radians"},
          "align": {"expr": "datum.m3_ring_end_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.m3_ring_end_radians > -PI/2 && datum.m3_ring_end_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.m3 == datum.max || datum.m3 == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "m3", "type": "quantitative", "format": @{fields.m3.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "m3_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum.target_ring_start_radians"},
          "align": {"expr": "datum.target_ring_start_radians > 0 ? 'left' : 'right'"},
          "baseline": {"expr": "datum.target_ring_start_radians > -PI/2 && datum.target_ring_start_radians < PI/2 ? 'bottom' : 'top'"},
          "opacity": {"expr": "datum.target == datum.max || datum.target == 0 ? 0 : 1"},
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "target", "type": "quantitative", "format": @{fields.targte.format}, "formatType": "holisticsFormat"},
          "color": {"value": {"expr": "target_color"}}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum._arc_start_radians"},
          "align": "right",
          "baseline": "middle",
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"value": "0"},
          "color": {"value": "black"}
        }
      },
      {
        "mark": {
          "type": "text",
          "radius": {"expr": "ring_label"},
          "theta": {"expr": "datum._arc_end_radians"},
          "align": "left",
          "baseline": "middle",
          "fontSize": {"expr": "label_font_size"},
          "fontWeight": "bold",
          "yOffset": {"expr": "ring_yOffset"}
        },
        "encoding": {
          "text": {"field": "max", "type": "quantitative", "format": @{fields.max.format}, "formatType": "holisticsFormat"},
          "color": {"value": "black"}
        }
      }
    ]
  }\;\;
}
```;;
  }
  block v1: VizBlock {
    label: 'Measures'
    viz: DataTable {
      dataset: demo.ds_ecommerce
      calculation max_monthly_order_count {
        label: 'Max Monthly Order Count'
        formula: @aql demo.fct_orders
| group(demo.fct_orders.created_at | month())
| select(
    month: demo.fct_orders.created_at | month(),
    monthly_order_count: demo.fct_orders.total_orders_count
  )
| max(monthly_order_count);;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation avg_monthly_order_count {
        label: 'Avg Monthly Order Count'
        formula: @aql demo.fct_orders
| group(demo.fct_orders.created_at | month())
| select(
    month: demo.fct_orders.created_at | month(),
    monthly_order_count: demo.fct_orders.total_orders_count
  )
| average(monthly_order_count);;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation monthly_target {
        label: 'Monthly Target'
        formula: @aql 1200;;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation order_count_this_month {
        label: 'Order Count This Month'
        formula: @aql count(demo.fct_orders.id) | where(demo.fct_orders.created_at matches @(this month));;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation order_count_last_month {
        label: 'Order Count Last Month'
        formula: @aql count(demo.fct_orders.id) | where(demo.fct_orders.created_at matches @(last month));;
        calc_type: 'measure'
        data_type: 'number'
      }
      fields: [
        VizFieldFull {
          ref: 'order_count_this_month'
          format {
            type: 'number'
            pattern: '#,###0.00'
          }
        },
        VizFieldFull {
          ref: 'order_count_last_month'
          format {
            type: 'number'
            pattern: '#,###0.00'
          }
        },
        VizFieldFull {
          ref: 'avg_monthly_order_count'
          format {
            type: 'number'
          }
        },
        VizFieldFull {
          ref: 'monthly_target'
          format {
            type: 'number'
            pattern: '#,###0.00'
          }
        },
        VizFieldFull {
          ref: 'max_monthly_order_count'
          format {
            type: 'number'
          }
        }
      ]
      settings {
        show_row_number: true
        row_limit: 5000
      }
    }
  }
  block v3: VizBlock {
    label: 'Two Measures & Target'
    viz: CustomChart {
      dataset: demo.ds_ecommerce
      calculation max_monthly_order_count {
        label: 'Max Monthly Order Count'
        formula: @aql demo.fct_orders
| group(demo.fct_orders.created_at | month())
| select(
    month: demo.fct_orders.created_at | month(),
    monthly_order_count: demo.fct_orders.total_orders_count
  )
| max(monthly_order_count);;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation avg_monthly_order_count {
        label: 'Avg Monthly Order Count'
        formula: @aql demo.fct_orders
| group(demo.fct_orders.created_at | month())
| select(
    month: demo.fct_orders.created_at | month(),
    monthly_order_count: demo.fct_orders.total_orders_count
  )
| average(monthly_order_count);;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation monthly_target {
        label: 'Monthly Target'
        formula: @aql 1200;;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation order_count_this_month {
        label: 'Order Count This Month'
        formula: @aql count(demo.fct_orders.id) | where(demo.fct_orders.created_at matches @(this month));;
        calc_type: 'measure'
        data_type: 'number'
      }
      calculation order_count_last_month {
        label: 'Order Count Last Month'
        formula: @aql count(demo.fct_orders.id) | where(demo.fct_orders.created_at matches @(last month));;
        calc_type: 'measure'
        data_type: 'number'
      }
      custom_chart_id: 20059
      field m1: VizFieldFull {
        ref: 'avg_monthly_order_count'
        format {
          type: 'number'
          pattern: '#,###0.00'
        }
      }
      field m2: VizFieldFull {
        ref: 'order_count_last_month'
        format {
          type: 'number'
          pattern: '#,###0.00'
        }
      }
      field max: VizFieldFull {
        ref: 'max_monthly_order_count'
        format {
          type: 'number'
          pattern: '#,###0.00'
        }
      }
      field target: VizFieldFull {
        ref: 'monthly_target'
        format {
          type: 'number'
          pattern: '#,###0.00'
        }
      }
      setting m1_color: 'green'
      setting m2_color: 'red'
      setting max_color: 'lightgray'
      setting target_color: 'black'
      setting label_font_size: 12
      setting percentage_font_size: 36
      settings {
        row_limit: 5000
      }
    }
  }
}